#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0424, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.6.3.0.2259")
    {
        type(ForNav.Report_6_3_0_2259; ForNavReport50002_v6_3_0_2259) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50612 "Update BOSA Sub Account Nos"
{
    RDLCLayout = './Layouts/UpdateBOSASubAccountNos.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Members Register"; "Members Register")
        {
            DataItemTableView = where("No." = filter('00003'));
            column(ReportForNavId_1; 1) { } // Autogenerated by ForNav - Do not delete
            trigger OnAfterGetRecord();
            begin
                BOSAAcc.Reset;
                BOSAAcc.SetRange(BOSAAcc."Account Type", 'SHARECAP');
                BOSAAcc.SetRange(BOSAAcc."BOSA Account No", "No.");
                BOSAAcc.SetFilter(BOSAAcc.Status, '<>%1', BOSAAcc.Status::Closed);
                if BOSAAcc.FindSet then begin
                    "Share Capital No" := BOSAAcc."No.";
                    Modify;
                end;
                BOSAAcc.Reset;
                BOSAAcc.SetRange(BOSAAcc."Account Type", 'DEPOSITS');
                BOSAAcc.SetRange(BOSAAcc."BOSA Account No", "No.");
                BOSAAcc.SetFilter(BOSAAcc.Status, '<>%1', BOSAAcc.Status::Closed);
                if BOSAAcc.FindSet then begin
                    "Deposits Account No" := BOSAAcc."No.";
                    Modify;
                end;
                BOSAAcc.Reset;
                BOSAAcc.SetRange(BOSAAcc."Account Type", 'SILVER');
                BOSAAcc.SetRange(BOSAAcc."BOSA Account No", "No.");
                BOSAAcc.SetFilter(BOSAAcc.Status, '<>%1', BOSAAcc.Status::Closed);
                if BOSAAcc.FindSet then begin
                    "Silver Account No" := BOSAAcc."No.";
                    Modify;
                end;
                BOSAAcc.Reset;
                BOSAAcc.SetRange(BOSAAcc."Account Type", '605');
                BOSAAcc.SetRange(BOSAAcc."BOSA Account No", "No.");
                BOSAAcc.SetFilter(BOSAAcc.Status, '<>%1', BOSAAcc.Status::Closed);
                if BOSAAcc.FindSet then begin
                    "FOSA Shares Account No" := BOSAAcc."No.";
                    Modify;
                end;
                BOSAAcc.Reset;
                BOSAAcc.SetRange(BOSAAcc."Account Type", 'BENFUND');
                BOSAAcc.SetRange(BOSAAcc."BOSA Account No", "No.");
                BOSAAcc.SetFilter(BOSAAcc.Status, '<>%1', BOSAAcc.Status::Closed);
                if BOSAAcc.FindSet then begin
                    "Benevolent Fund No" := BOSAAcc."No.";
                    Modify;
                end;
                BOSAAcc.Reset;
                BOSAAcc.SetRange(BOSAAcc."Account Type", '607');
                BOSAAcc.SetRange(BOSAAcc."BOSA Account No", "No.");
                BOSAAcc.SetFilter(BOSAAcc.Status, '<>%1', BOSAAcc.Status::Closed);
                if BOSAAcc.FindSet then begin
                    "Additional Shares Account No" := BOSAAcc."No.";
                    Modify;
                end;
                /*
				{"Share Capital No":='';
				"Deposits Account No":='';
				"FOSA Shares Account No":='';
				"Benevolent Fund No":='';
				"Additional Shares Account No":='';
				MODIFY;
				}
				*/
                /*
				ObjVendor.INIT;
				ObjVendor."No.":='1001-001-'+"Members Register"."No.";
				ObjVendor.Name:="Members Register".Name;
				ObjVendor."BOSA Account No":="Members Register"."No.";
				ObjVendor."Phone No.":="Members Register"."Phone No.";
				ObjVendor."Mobile Phone No":="Members Register"."Mobile Phone No";
				ObjVendor."Global Dimension 1 Code":="Members Register"."Global Dimension 1 Code";
				ObjVendor."Global Dimension 2 Code":="Members Register"."Global Dimension 2 Code";
				ObjVendor."Creditor Type":=ObjVendor."Creditor Type"::"FOSA Account";
				ObjVendor."Vendor Posting Group":='DEPOSITS';
				ObjVendor."Account Type":='DEPOSIT';
				ObjVendor.INSERT;
				ObjVendor.INIT;
				ObjVendor."No.":='1001-002-'+"Members Register"."No.";
				ObjVendor.Name:="Members Register".Name;
				ObjVendor."BOSA Account No":="Members Register"."No.";
				ObjVendor."Phone No.":="Members Register"."Phone No.";
				ObjVendor."Mobile Phone No":="Members Register"."Mobile Phone No";
				ObjVendor."Global Dimension 1 Code":="Members Register"."Global Dimension 1 Code";
				ObjVendor."Global Dimension 2 Code":="Members Register"."Global Dimension 2 Code";
				ObjVendor."Creditor Type":=ObjVendor."Creditor Type"::"FOSA Account";
				ObjVendor."Vendor Posting Group":='SHARECAP';
				ObjVendor."Account Type":='SHARECAP';
				ObjVendor.INSERT;
				ObjVendor.INIT;
				ObjVendor."No.":='1001-003-'+"Members Register"."No.";
				ObjVendor.Name:="Members Register".Name;
				ObjVendor."BOSA Account No":="Members Register"."No.";
				ObjVendor."Phone No.":="Members Register"."Phone No.";
				ObjVendor."Mobile Phone No":="Members Register"."Mobile Phone No";
				ObjVendor."Global Dimension 1 Code":="Members Register"."Global Dimension 1 Code";
				ObjVendor."Global Dimension 2 Code":="Members Register"."Global Dimension 2 Code";
				ObjVendor."Creditor Type":=ObjVendor."Creditor Type"::"FOSA Account";
				ObjVendor."Vendor Posting Group":='BENFUND';
				ObjVendor."Account Type":='BENFUND';
				ObjVendor.INSERT;*/
                /*
				ObjVendor.INIT;
				ObjVendor."No.":='1001-005-'+"Members Register"."No.";
				ObjVendor.Name:="Members Register".Name;
				ObjVendor."BOSA Account No":="Members Register"."No.";
				ObjVendor."Phone No.":="Members Register"."Phone No.";
				ObjVendor."Mobile Phone No":="Members Register"."Mobile Phone No";
				ObjVendor."Global Dimension 1 Code":="Members Register"."Global Dimension 1 Code";
				ObjVendor."Global Dimension 2 Code":="Members Register"."Global Dimension 2 Code";
				ObjVendor."Creditor Type":=ObjVendor."Creditor Type"::"FOSA Account";
				ObjVendor."Vendor Posting Group":='SILVER';
				ObjVendor."Account Type":='SILVER';
				ObjVendor.INSERT;
				*/
                /*IF MembersRegister.GET("Member Accounts Import Buffer"."Member No") THEN
				BEGIN
				  MembersRegister."Has Silver Deposit":=TRUE;
				  MembersRegister.MODIFY;
				END;*/

            end;

        }
    }

    requestpage
    {


        SaveValues = false;
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;
    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        ;
        ReportsForNavPre;
    end;

    var
        BOSAAcc: Record Vendor;
        ObjVendor: Record Vendor;
        MembersRegister: Record "Members Register";

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport50002_v6_3_0_2259;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_6_3_0_2259\ForNav.Reports.6.3.0.2259.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.6.3.0.2259.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 6.3.0.2259 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
